# Servidor para a API Strapi (api.yourdomain.com)
server {
    listen 80;
    server_name api.yourdomain.com;

    # Para Let's Encrypt - descomentar e ajustar após instalar certbot
    # location ~ /.well-known/acme-challenge {
    #     allow all;
    #     root /var/www/html; # Ou outro diretório para desafios ACME
    # }

    location / {
        proxy_pass http://localhost:1337; # Strapi rodando na porta 1337
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
    }

    # Configurações adicionais de segurança e performance podem ser adicionadas aqui
    # Ex: client_max_body_size para uploads grandes no Strapi
    client_max_body_size 50M; # Exemplo: permite uploads de até 50MB
}

# Servidor para o Frontend Next.js (yourdomain.com)
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;

    # Para Let's Encrypt
    # location ~ /.well-known/acme-challenge {
    #     allow all;
    #     root /var/www/html;
    # }

    location / {
        proxy_pass http://localhost:3000; # Next.js rodando na porta 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Configurações de cache para assets estáticos (opcional, Next.js já lida bem com isso)
    # location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    #     expires 1y;
    #     add_header Cache-Control "public";
    # }
}

# Após configurar SSL com Let's Encrypt, você adicionaria blocos 'server'
# para escutar na porta 443 e redirecionar HTTP para HTTPS.
# Exemplo (para yourdomain.com):
#
# server {
#    listen 443 ssl http2;
#    server_name yourdomain.com www.yourdomain.com;
#
#    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#    location / {
#        proxy_pass http://localhost:3000;
#        # ... mesmas diretivas proxy_set_header acima ...
#    }
# }
#
# server {
#    listen 80;
#    server_name yourdomain.com www.yourdomain.com;
#    return 301 https://$host$request_uri;
# }
# (Bloco similar para api.yourdomain.com)
